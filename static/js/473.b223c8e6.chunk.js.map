{"version":3,"file":"static/js/473.b223c8e6.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","redux/operations.js","redux/selector.js","components/Form/Form.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/App.styled.js","redux/contacts/selectors.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ImputForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  margin: 0 auto;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 15px;\n  background-image: linear-gradient(270deg, #33353a 15%, #000000 65%);\n  color: #ebe5de;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://644502fab80f57f581af3a73.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const response = await axios.get('/contacts/contacts');\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts/contacts', { name, number });\n      console.log({ name, number });\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/contacts/${contactId}`);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter.filter;\n\nexport const selectAllContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { ImputForm, Label } from './Form.styled';\n\nimport { addContact } from 'redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectAllContacts } from 'redux/selector';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase())\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <ImputForm onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <button type=\"submit\">Add contact</button>\n    </ImputForm>\n  );\n}\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const Contacts = styled.li`\n  margin-top: 5px;\n`;\n\nexport const ButtonDelete = styled.button`\n  margin-left: 10px;\n`;\n","import { useEffect, useRef } from 'react';\nimport { Contacts, ButtonDelete } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { selectAllContacts } from 'redux/selector';\n\nexport default function ContactList() {\n  const isFirstRender = useRef(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      dispatch(fetchContacts());\n    }\n    isFirstRender.current = false;\n    return;\n  }, [dispatch]);\n\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, phone }) => (\n        <Contacts key={id}>\n          {name}: {phone}\n          <ButtonDelete onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </ButtonDelete>\n        </Contacts>\n      ))}\n    </ul>\n  );\n}\n","import { ImputForm, Label } from '../Form/Form.styled';\n\nimport { filterContact } from 'redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selector';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  console.log(filter);\n\n  return (\n    <ImputForm>\n      <Label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={filter}\n          onChange={evt => dispatch(filterContact(evt.target.value))}\n          required\n        />\n      </Label>\n    </ImputForm>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nexport const LoaderStyled = styled.div`\n  text-align: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderStyled } from './Loader.styled';\n\nexport function Loader() {\n  return (\n    <LoaderStyled>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#767676\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Conteiner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  color: #010101;\n  margin:auto;\n`;\nexport const Title = styled.h2`\n  font-size: 23px;\n \n`;\n\n\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import Form from '../components/Form/Form';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { Loader } from '../components/Loader/Loader';\nimport { Conteiner, Title } from '../components/App.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectAllContacts,\n  selectLoading,\n  // selectError,\n} from 'redux/contacts/selectors';\n\nexport function App() {\n  const contacts = useSelector(selectAllContacts);\n  console.log(contacts);\n  const isLoading = useSelector(selectLoading);\n  // const error = useSelector(selectError);\n\n  return (\n    <Conteiner>\n      <Title>Phonebook</Title>\n      <Form />\n      <Title>Contact</Title>\n      {contacts.length !== 0 && <Filter />}\n      <ContactList />\n      {isLoading && <Loader />}\n      {/* {isLoading && !error && <Loader />} */}\n    </Conteiner>\n  );\n}\nexport default App;\n"],"names":["ImputForm","styled","Label","axios","fetchContacts","createAsyncThunk","_","thunkAPI","response","console","log","data","rejectWithValue","message","addContact","name","number","deleteContact","contactId","getFilter","state","filter","selectAllContacts","createSelector","contacts","items","contact","toLowerCase","includes","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","onSubmit","preventDefault","map","alert","type","pattern","title","onChange","required","Contacts","ButtonDelete","ContactList","isFirstRender","useRef","useEffect","current","id","phone","onClick","evt","filterContact","target","LoaderStyled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Conteiner","Title","selectLoading","loading","App","isLoading","length"],"sourceRoot":""}